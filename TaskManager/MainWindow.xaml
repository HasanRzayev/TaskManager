<Window x:Class="TaskManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TaskManager"
        mc:Ignorable="d"
     
         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:viewmodels="clr-namespace:TaskManager.ViewModels" xmlns:hc="https://handyorg.github.io/handycontrol" d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="13"
      TextOptions.TextFormattingMode="Ideal"
      TextOptions.TextRenderingMode="Auto"
      FontFamily="{DynamicResource MaterialDesignFont}"
      Height="850" Width="1600"
        Title="MainWindow" >
    <Window.Resources>
        
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition  Height="1*"></RowDefinition>
            <RowDefinition  Height="8*"></RowDefinition>
       
            <RowDefinition  Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <hc:RunningBlock Grid.Row="2" Margin="0,16,0,0" Duration="0:0:20"  IsRunning="{Binding IsMouseOver,RelativeSource={RelativeSource Self},Converter={StaticResource Boolean2BooleanReConverter}}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text=" Hər cür proyektlərə dizayn üçün əlaqə     " FontSize="30"></TextBlock>

                <Image Source="https://cdn2.iconfinder.com/data/icons/social-icons-33/128/Instagram-256.png" Width="30"/>
                <TextBlock Text="  h.a.s.a.n.rza         " FontSize="30"></TextBlock>
                <Image Source="https://cdn0.iconfinder.com/data/icons/zondicons/20/phone-256.png" Width="30"/>
                <TextBlock Text="  999.999.99.99        " FontSize="30"></TextBlock>


            </StackPanel>
        </hc:RunningBlock>
        <TextBox  Grid.Row="0" Text="{Binding SearchText,UpdateSourceTrigger=PropertyChanged}"
  materialDesign:HintAssist.Hint="Search"
  Style="{StaticResource MaterialDesignFloatingHintTextBox}"
  VerticalAlignment="Center" />
   
       
       

                
            <materialDesign:DialogHost  Grid.Row="1"
  
  Style="{StaticResource MaterialDesignEmbeddedDialogHost}"
  DialogMargin="8" >
                <materialDesign:DialogHost.DialogContent >
                    <StackPanel
      Margin="16">
                        <TextBox Text="{Binding Text}" Foreground="Blue"></TextBox>

                        <StackPanel
        Orientation="Horizontal"
        HorizontalAlignment="Right">
                            <Button
  Style="{StaticResource MaterialDesignRaisedDarkButton}"
 Command="{Binding Add}"
  ToolTip="Resource name: MaterialDesignRaisedLightDarkButton"
  Content="Add"
  IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" >
                                <Button.CommandParameter>
                                    <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                        True
                                    </system:Boolean>
                                </Button.CommandParameter>
                            </Button>
                            <Button
          Style="{StaticResource MaterialDesignFlatButton}"
          IsCancel="True"
          Margin="0 8 8 0"
          Content="CANCEL"
          Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                                <Button.CommandParameter>
                                    <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                        False
                                    </system:Boolean>
                                </Button.CommandParameter>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </materialDesign:DialogHost.DialogContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="8*"></RowDefinition>
                    <RowDefinition Height="1*"></RowDefinition>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True" >
                        <ListView   ItemsSource="{Binding processes}" SelectedItem="{Binding Selected_Process,UpdateSourceTrigger=PropertyChanged}" ScrollViewer.HorizontalScrollBarVisibility="Visible"  ScrollViewer.VerticalScrollBarVisibility="Visible" Height="800" >
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View  >
                                <GridView  >
                              
                                <GridViewColumn Header="Id" Width="150"  >
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <Grid Background="White">
                                                <TextBlock Text="{Binding Path=process.Id}" Background="White" />
                                                </Grid>

                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="ProcessName" Width="150" >
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBlock Text="{Binding Path=process.ProcessName}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                <GridViewColumn Header="STATUS" Width="150" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate >
                                            <TextBlock Text="{Binding Path=isrunning}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="CPU" Width="150" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate >
                                            <TextBlock Text="{Binding Path=cpu}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="HandleCount" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                            <TextBlock Text="{Binding Path=process.HandleCount}" Background="Yellow"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="ThreadCount" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                            <TextBlock Text="{Binding Path=process.Threads.Count}" Background="Yellow"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="WorkingSet"  Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                            <TextBlock Text="{Binding Path=process.WorkingSet}" Background="Yellow"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="PagedSystemMemorySize64" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                            <TextBlock Text="{Binding Path=process.PagedSystemMemorySize64}" Background="Yellow"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="UserProcessorTime" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                            <TextBlock Text="{Binding Path=process.UserProcessorTime}" Background="Yellow"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>


                                </GridView>

                            </ListView.View>
                        </ListView>

                    </StackPanel>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                       
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    
                    <Border BorderThickness="15" Grid.Column="0">
                        <Button  Background="Gray"
  Style="{StaticResource MaterialDesignRaisedDarkButton}"
 Command="{Binding Refresh}"
  ToolTip="Resource name: MaterialDesignRaisedLightDarkButton"
  Content="Refresh"
  IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />
                    </Border>
                    <Border BorderThickness="15" Grid.Column="1">
                        <Button Grid.Column="2" Background="Gray"
  Style="{StaticResource MaterialDesignRaisedDarkButton}" 
 Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
  ToolTip="Resource name: MaterialDesignRaisedLightDarkButton"
  Content="Create"
  IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />
                    </Border>
                    <Border BorderThickness="15" Grid.Column="2">

                        <Button  Background="Gray"
  Style="{StaticResource MaterialDesignRaisedDarkButton}"
 Command="{Binding Delete}"
  ToolTip="Resource name: MaterialDesignRaisedLightDarkButton"
  Content="Close"
  IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />
                    </Border>
                </Grid>
                   
        </Grid>

          
      
            </materialDesign:DialogHost>

       
        <!--<Popup Placement="Center" IsOpen="{Binding Popupisopen,UpdateSourceTrigger=PropertyChanged}" Width="200" Height="200">
            <StackPanel Background="Red">
                <Border CornerRadius="10"  BorderThickness="15" >
                    <Button Width="60" Height="30" HorizontalAlignment="Right" Command="{Binding Exit}"  >
                        <materialDesign:PackIcon Kind="CloseCircle" />
                    </Button>
                  
                </Border>
                <Border CornerRadius="10"  BorderThickness="15" >
                    <TextBox Text="{Binding Text}" Foreground="Blue"></TextBox>
                </Border>
                <Border CornerRadius="10"  BorderThickness="15" >
                    <Button
  Style="{StaticResource MaterialDesignRaisedDarkButton}"
 Command="{Binding Add}"
  ToolTip="Resource name: MaterialDesignRaisedLightDarkButton"
  Content="_DARK"
  IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />
                </Border>
            </StackPanel>
        </Popup>-->
    </Grid>
</Window>
